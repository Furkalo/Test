Test Case: Book a Room and Confirm Booking
------------------------------------------
Test ID: TC001
Description: Verify that a user can successfully book a room and see the confirmation message.
Preconditions: 
  1. User has access to https://automationintesting.online/
  2. The room to book is available

Test Steps:

1. Navigate to "https://automationintesting.online/"
   Expected Result: The home page loads successfully.

2. Click on the second "Book now" button
   Expected Result: The room booking page opens.

3. Verify that the calendar is visible
   Expected Result: Calendar component is displayed on the page.

4. Select check-in date: 19 
   Expected Result: The check-in date is selected and highlighted.

5. Select check-out date: 20
   Expected Result: The check-out date is selected and highlighted.

6. Click "Do Reservation" button
   Expected Result: The booking form becomes visible.

7. Fill in the booking form:
   - First Name: David
   - Last Name: Petrenko
   - Email: test@gmail.com
   - Phone: +380958207433
   Expected Result: All input fields are filled with the provided data.

8. Click the "Reserve Now" button
   Expected Result: Booking request is submitted.

9. Verify that "Booking Confirmed" message is displayed
   Expected Result: The text "Booking Confirmed" is visible on the page.

10. Check console for confirmation text
    Expected Result: The confirmation text is printed correctly in the console.

Postconditions:
  - Room is booked for the selected dates
Notes:
  - Ensure network connection is stable
  - Use a test account if required








Test Case: Book a Room with Invalid Data and Check Error Messages
----------------------------------------------------------------
Test ID: TC002
Description: Verify that error messages are displayed when booking a room with invalid input data.
Preconditions: 
  1. User has access to https://automationintesting.online/
  2. The room to book is available

Test Steps:

1. Navigate to "https://automationintesting.online/"
   Expected Result: The home page loads successfully.

2. Click on the second "Book now" button
   Expected Result: The room booking page opens.

3. Verify that the calendar is visible
   Expected Result: Calendar component is displayed on the page.

4. Select check-in date: 19
   Expected Result: The check-in date is selected and highlighted.

5. Select check-out date: 20
   Expected Result: The check-out date is selected and highlighted.

6. Click "Do Reservation" button
   Expected Result: The booking form becomes visible.

7. Fill in the booking form with invalid data:
   - First Name: (leave empty)
   - Last Name: Pe
   - Email: abc@
   - Phone: 12
   Expected Result: All input fields are filled, but some contain invalid data.

8. Click the "Reserve Now" button
   Expected Result: The form is submitted, validation occurs, and error messages are displayed.

9. Verify that the error alert is visible
   Expected Result: The div with class "alert alert-danger" is visible on the page.

10. Check the error messages
    Expected Result: The alert contains the following messages:
      - "Firstname should not be blank"
      - "must be a well-formed email address"
      - "size must be between 3 and 18"
      - "size must be between 11 and 21"
    Additionally, the messages should be printed in the console.

Postconditions:
  - Room is not booked
Notes:
  - Ensure network connection is stable
  - Use a test account if required









Test Case: Book a Room Twice and Check for Application Error
------------------------------------------------------------
Test ID: TC003
Description: Verify that booking the same room for the same dates twice triggers an application error.
Preconditions: 
  1. User has access to https://automationintesting.online/
  2. The room to book is available

Test Steps:

1. Navigate to "https://automationintesting.online/"
   Expected Result: The home page loads successfully.

2. Click on the second "Book now" button
   Expected Result: The room booking page opens.

3. Verify that the calendar is visible
   Expected Result: Calendar component is displayed on the page.

4. Select check-in date: 19
   Expected Result: The check-in date is selected and highlighted.

5. Select check-out date: 20
   Expected Result: The check-out date is selected and highlighted.

6. Click "Do Reservation" button
   Expected Result: The booking form becomes visible.

7. Fill in the booking form with valid data:
   - First Name: David
   - Last Name: Petrenko
   - Email: test@gmail.com
   - Phone: +380958207433
   Expected Result: All input fields are correctly filled.

8. Click "Reserve Now" button
   Expected Result: The booking is submitted successfully and a confirmation message is displayed.

9. Verify that "Booking Confirmed" message is visible
   Expected Result: The page displays the "Booking Confirmed" message.
   Console Output: "First booking confirmed."

10. Click "Return home" button
    Expected Result: User is navigated back to the home page.
    Page URL should be: https://automationintesting.online/

11. Click on the second "Book now" button again
    Expected Result: The room booking page opens again.

12. Select the same check-in and check-out dates: 19-20
    Expected Result: The same dates are selected and highlighted.

13. Click "Do Reservation" button
    Expected Result: The booking form becomes visible.

14. Fill in the booking form with the same valid data:
    - First Name: David
    - Last Name: Petrenko
    - Email: test@gmail.com
    - Phone: +380958207433
    Expected Result: All input fields are correctly filled.

15. Click "Reserve Now" button
    Expected Result: The system attempts to submit the booking but fails due to date conflict.

16. Verify that "Application error" message is visible
    Expected Result: A message appears on the page stating:
      "Application error: a client-side exception has occurred while loading automationintesting.online (see the browser console for more information)."
    Console Output: Prints the error message text.

Postconditions:
  - First booking remains confirmed
  - Second booking fails with a client-side application error
Notes:
  - Wait times of 300ms are added after selecting dates to allow calendar updates
  - Timeout for visibility checks increased to 10 seconds to handle page load
